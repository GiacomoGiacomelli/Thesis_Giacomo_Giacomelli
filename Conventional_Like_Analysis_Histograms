############################################################################################################################################################################
#Activate necessary packages
############################################################################################################################################################################

library("gplots")
library("RColorBrewer")
library("ggplot2")

############################################################################################################################################################################
#File input
############################################################################################################################################################################

folder<-c("../Profiles1","../Profiles2","../Profiles3", ...)  ###list of profiles folders (one for field of view)
setwd("C:/.../Profiles1")                                     ###set working directory to first profiles folder
 
############################################################################################################################################################################

chan<-"Red*"
maxim<-0
mayim<-0

for (f in folder){
  setwd(f)
  RED<-Sys.glob(chan)
  for(k in 1:length(RED)){
    filer<-read.table(RED[k], sep="\t",dec=".", stringsAsFactors=FALSE,header=TRUE)
    if (max(filer$x>maxim)){
      maxim<-max(filer$x)
    }
    #if (max(filer$y>mayim)){                 #activate if normalize for maximum overall fluorescence 
    #  mayim<-max(filer$y)                    #
    #}                                        #
    }}

a<-seq(0,maxim, by=0.02)                      #define binwidth (0.02 um)
REDTOT<-data.frame()

counter<-1
for (f in folder){
setwd(f)
RED<-Sys.glob(chan)
for(k in 1:length(RED)){
  file<-read.table(RED[k], sep="\t",dec=".", stringsAsFactors=FALSE,header=TRUE) # sep="," for ratio
  file[3]<-length(file$x)+(0.0001*k) #risk that two cells of the same length from different folders come from a file with same name...think of solution
  file[4]<-counter
  counter<-counter+1
  REDTOT<-rbind(REDTOT,file)
}
REDTOT1<-REDTOT[order(REDTOT$V3),]
}

df2<-data.frame()
for(k in 1:length(unique(REDTOT1$V4))){
  print(k)
  file<-REDTOT1[REDTOT1$V4==unique(REDTOT1$V4)[k],]
  mayim<-max(file$y)                                      ###if active it normalizes on max cell intensity
  print(mayim)
  for (i in 1:(length(a)-1)){
    if (a[i]<max(file$x)){
    m<-mean(file[file$x>=a[i] & file$x<a[i+1],]$y)
    b<-replicate(round((m/mayim)*1000)+1,k) #for epi: m*100/mayim #for palm: 1+((m/mayim)*1000))
    c<-replicate(round((m/mayim)*1000)+1,a[i])
    df1<-as.data.frame(c)
    df1[2]<-b
    df2<-rbind(df2,df1)
    }
  }
}



write.table(REDTOT1, file="../XXX_profiles_ordered.txt",sep=",",row.names = FALSE, quote=FALSE)   ###save file containing the fluorescence profiles ordereed by cell length
write.table(df2, file="../XXX_profiles_ordered_matrix.txt",sep=",",row.names = FALSE, quote=FALSE)  ###save matrix used to represent the fluorescence profiles as demographs via hist2d()

a<-seq(0,max(df2[1]), by=0.02)

rf1<-colorRampPalette(c("black","blue","red","red","red")) ####Define color scale
r <- rf1(256)

png(file="../XXX_demograph.png",height=3000,width=2500,res=600)   ####Demograph
h2<-hist2d(df2, nbins=c(length(a)-1,length(unique(REDTOT1$V3))), col=r)
dev.off()
